services:
  postgres:
    image: postgres:15.3-alpine
    container_name: church-saas-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_DATABASE:-church_saas}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - church-saas-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: church-saas-api
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_DATABASE: ${DB_DATABASE:-church_saas}
      JWT_SECRET: ${JWT_SECRET:-super_secret_jwt_key}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - church-saas-network
    restart: unless-stopped

networks:
  church-saas-network:
    driver: bridge

volumes:
  postgres_data:
